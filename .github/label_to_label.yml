# Use this to auto apply labels based on other labels.  Applies to both PRs and
# issues. Currently only supports any and all
- any:
  - "module: opcheck"
  then:
  - "module: custom-operators"
- any:
  - "module: custom-operators"
  - "module: functionalization"
  - "module: aotdispatch"
  - "module: higher order operators"
  - "module: fakeTensor"
  - "module: ProxyTensor"
  - "module: library"
  - "module: reinplacing"
  then:
  - "module: pt2-dispatcher"
- any:
  - "module: vmap"
  then:
  - "module: functorch"
- any:
  - "module: reinplacing"
  then:
  - "module: inductor"
- any:
  - "module: pt2 optimizer"
  then:
  - "module: dynamo"
- any:
  - "module: flex attention"
  then:
  - "module: higher order operators"
- any:
  - "module: aotinductor"
  then:
  - "oncall: export"
- any:
  - "module: dynamo"
  - "module: pt2-dispatcher"
  - "module: inductor"
  - "module: aotinductor"
  - "module: cudagraphs"
  - "oncall: export"
  - "module: startup-tracing-compile"
  - "module: compiled autograd"
  - "module: flex attention"
  - "module: dynamic shapes"
  then:
  - "oncall: pt2"
# For dependabot PRs, the practice is for PyTorch-repo admins to merge the PR
# instead of using pytorchbot so that the vulnerability issue can be marked as
# resolved. This rule is here to ensure that we don't forget to add ciflow/trunk
# to such PRs and cause trunk failure, i.e. #135068
- any:
  # This is the default label that dependabot adds to all its PR
  - "dependency issue"
  then:
  - "ciflow/trunk"
